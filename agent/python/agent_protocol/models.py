# generated by fastapi-codegen:
#   filename:  ../../openapi.yml
#   timestamp: 2023-08-07T12:14:43+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, List, Optional

from pydantic import BaseModel, Field


class TaskInput(BaseModel):
    __root__: Any = Field(
        ..., description="Input parameters for the task. Any value is allowed."
    )


class Artifact(BaseModel):
    artifact_id: str = Field(..., description="ID of the artifact.")
    file_name: str = Field(..., description="Filename of the artifact.")
    relative_path: Optional[str] = Field(
        None, description="Relative path of the artifact in the agent's workspace."
    )


class StepInput(BaseModel):
    __root__: Any = Field(
        ..., description="Input parameters for the task step. Any value is allowed."
    )


class StepOutput(BaseModel):
    __root__: Any = Field(
        ..., description="Output that the task step has produced. Any value is allowed."
    )


class TaskRequestBody(BaseModel):
    input: Optional[str] = Field(None, description="Input prompt for the task.")
    additional_input: Optional[TaskInput] = None


class Task(TaskRequestBody):
    task_id: str = Field(..., description="The ID of the task.")
    artifacts: List[Artifact] = Field(
        [], description="A list of artifacts that the task has produced."
    )


class StepRequestBody(BaseModel):
    input: Optional[str] = Field(None, description="Input prompt for the step.")
    additional_input: Optional[StepInput] = None


class Status(Enum):
    created = "created"
    completed = "completed"


class Step(StepRequestBody):
    task_id: str = Field(..., description="The ID of the task this step belongs to.")
    step_id: str = Field(..., description="The ID of the task step.")
    name: Optional[str] = Field(None, description="The name of the task step.")
    status: Status = Field(..., description="The status of the task step.")
    output: Optional[str] = Field(None, description="Output of the task step.")
    additional_output: Optional[StepOutput] = None
    artifacts: List[Artifact] = Field(
        [], description="A list of artifacts that the step has produced."
    )
    is_last: Optional[bool] = Field(
        False, description="Whether this is the last step in the task."
    )
